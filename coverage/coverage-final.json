{"/Users/hermes.espinola/Workspace/project/web/src/app.ts": {"path":"/Users/hermes.espinola/Workspace/project/web/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":41}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":14},"end":{"line":8,"column":30}},"7":{"start":{"line":9,"column":15},"end":{"line":9,"column":32}},"8":{"start":{"line":10,"column":14},"end":{"line":10,"column":38}},"9":{"start":{"line":11,"column":13},"end":{"line":11,"column":28}},"10":{"start":{"line":12,"column":17},"end":{"line":12,"column":36}},"11":{"start":{"line":13,"column":17},"end":{"line":13,"column":36}},"12":{"start":{"line":14,"column":25},"end":{"line":14,"column":53}},"13":{"start":{"line":15,"column":17},"end":{"line":15,"column":36}},"14":{"start":{"line":16,"column":19},"end":{"line":16,"column":33}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":16}},"16":{"start":{"line":20,"column":23},"end":{"line":20,"column":52}},"17":{"start":{"line":21,"column":22},"end":{"line":21,"column":50}},"18":{"start":{"line":23,"column":23},"end":{"line":23,"column":51}},"19":{"start":{"line":25,"column":12},"end":{"line":25,"column":21}},"20":{"start":{"line":27,"column":17},"end":{"line":27,"column":41}},"21":{"start":{"line":28,"column":0},"end":{"line":28,"column":28}},"22":{"start":{"line":29,"column":0},"end":{"line":32,"column":3}},"23":{"start":{"line":29,"column":66},"end":{"line":29,"column":113}},"24":{"start":{"line":30,"column":4},"end":{"line":30,"column":89}},"25":{"start":{"line":34,"column":0},"end":{"line":34,"column":42}},"26":{"start":{"line":37,"column":0},"end":{"line":37,"column":23}},"27":{"start":{"line":38,"column":0},"end":{"line":38,"column":23}},"28":{"start":{"line":39,"column":0},"end":{"line":39,"column":27}},"29":{"start":{"line":40,"column":0},"end":{"line":40,"column":51}},"30":{"start":{"line":41,"column":0},"end":{"line":41,"column":28}},"31":{"start":{"line":42,"column":0},"end":{"line":50,"column":4}},"32":{"start":{"line":51,"column":0},"end":{"line":51,"column":31}},"33":{"start":{"line":52,"column":0},"end":{"line":52,"column":28}},"34":{"start":{"line":53,"column":0},"end":{"line":53,"column":36}},"35":{"start":{"line":54,"column":0},"end":{"line":54,"column":35}},"36":{"start":{"line":55,"column":0},"end":{"line":58,"column":3}},"37":{"start":{"line":56,"column":4},"end":{"line":56,"column":31}},"38":{"start":{"line":57,"column":4},"end":{"line":57,"column":11}},"39":{"start":{"line":59,"column":0},"end":{"line":73,"column":3}},"40":{"start":{"line":61,"column":4},"end":{"line":71,"column":5}},"41":{"start":{"line":66,"column":8},"end":{"line":66,"column":40}},"42":{"start":{"line":68,"column":9},"end":{"line":71,"column":5}},"43":{"start":{"line":70,"column":8},"end":{"line":70,"column":40}},"44":{"start":{"line":72,"column":4},"end":{"line":72,"column":11}},"45":{"start":{"line":74,"column":0},"end":{"line":74,"column":81}},"46":{"start":{"line":78,"column":0},"end":{"line":78,"column":41}},"47":{"start":{"line":79,"column":0},"end":{"line":79,"column":42}},"48":{"start":{"line":80,"column":0},"end":{"line":80,"column":43}},"49":{"start":{"line":81,"column":0},"end":{"line":81,"column":50}},"50":{"start":{"line":82,"column":0},"end":{"line":82,"column":52}},"51":{"start":{"line":83,"column":0},"end":{"line":83,"column":43}},"52":{"start":{"line":84,"column":0},"end":{"line":84,"column":76}},"53":{"start":{"line":87,"column":0},"end":{"line":87,"column":95}},"54":{"start":{"line":88,"column":0},"end":{"line":88,"column":97}},"55":{"start":{"line":89,"column":0},"end":{"line":89,"column":94}},"56":{"start":{"line":90,"column":0},"end":{"line":90,"column":100}},"57":{"start":{"line":92,"column":0},"end":{"line":92,"column":113}},"58":{"start":{"line":96,"column":0},"end":{"line":96,"column":101}},"59":{"start":{"line":97,"column":0},"end":{"line":99,"column":3}},"60":{"start":{"line":98,"column":4},"end":{"line":98,"column":61}},"61":{"start":{"line":100,"column":0},"end":{"line":100,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":29,"column":58},"end":{"line":29,"column":59}},"loc":{"start":{"line":29,"column":64},"end":{"line":29,"column":115}},"line":29},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":123},"end":{"line":29,"column":124}},"loc":{"start":{"line":29,"column":130},"end":{"line":32,"column":1}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":55,"column":8},"end":{"line":55,"column":9}},"loc":{"start":{"line":55,"column":28},"end":{"line":58,"column":1}},"line":55},"3":{"name":"(anonymous_3)","decl":{"start":{"line":59,"column":8},"end":{"line":59,"column":9}},"loc":{"start":{"line":59,"column":28},"end":{"line":73,"column":1}},"line":59},"4":{"name":"(anonymous_4)","decl":{"start":{"line":97,"column":144},"end":{"line":97,"column":145}},"loc":{"start":{"line":97,"column":158},"end":{"line":99,"column":1}},"line":97}},"branchMap":{"0":{"loc":{"start":{"line":34,"column":16},"end":{"line":34,"column":40}},"type":"binary-expr","locations":[{"start":{"line":34,"column":16},"end":{"line":34,"column":32}},{"start":{"line":34,"column":36},"end":{"line":34,"column":40}}],"line":34},"1":{"loc":{"start":{"line":61,"column":4},"end":{"line":71,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":71,"column":5}},{"start":{"line":61,"column":4},"end":{"line":71,"column":5}}],"line":61},"2":{"loc":{"start":{"line":61,"column":8},"end":{"line":65,"column":29}},"type":"binary-expr","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":17}},{"start":{"line":62,"column":8},"end":{"line":62,"column":29}},{"start":{"line":63,"column":8},"end":{"line":63,"column":30}},{"start":{"line":64,"column":8},"end":{"line":64,"column":34}},{"start":{"line":65,"column":8},"end":{"line":65,"column":29}}],"line":61},"3":{"loc":{"start":{"line":68,"column":9},"end":{"line":71,"column":5}},"type":"if","locations":[{"start":{"line":68,"column":9},"end":{"line":71,"column":5}},{"start":{"line":68,"column":9},"end":{"line":71,"column":5}}],"line":68},"4":{"loc":{"start":{"line":68,"column":13},"end":{"line":69,"column":30}},"type":"binary-expr","locations":[{"start":{"line":68,"column":13},"end":{"line":68,"column":21}},{"start":{"line":69,"column":8},"end":{"line":69,"column":30}}],"line":68}},"s":{"0":2,"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":0,"25":2,"26":2,"27":2,"28":2,"29":2,"30":2,"31":2,"32":2,"33":2,"34":2,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":1,"42":1,"43":0,"44":2,"45":2,"46":2,"47":2,"48":2,"49":2,"50":2,"51":2,"52":2,"53":2,"54":2,"55":2,"56":2,"57":2,"58":2,"59":2,"60":0,"61":2},"f":{"0":2,"1":0,"2":2,"3":2,"4":0},"b":{"0":[2,2],"1":[1,1],"2":[2,2,1,1,1],"3":[0,1],"4":[1,0]},"inputSourceMap":{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from \"express\";\nimport * as compression from \"compression\";  // compresses requests\nimport * as session from \"express-session\";\nimport * as bodyParser from \"body-parser\";\nimport * as logger from \"morgan\";\nimport * as lusca from \"lusca\";\nimport * as dotenv from \"dotenv\";\nimport * as mongo from \"connect-mongo\";\nimport * as path from \"path\";\nimport * as mongoose from \"mongoose\";\nimport * as passport from \"passport\";\nimport * as expressValidator from \"express-validator\";\nimport * as bluebird from \"bluebird\";\n\nconst MongoStore = mongo(session);\n\n// Load environment variables from .env file, where API keys and passwords are configured\ndotenv.config();\n\n// Controllers (route handlers)\nimport * as userController from \"./controllers/user\";\nimport * as apiController from \"./controllers/api\";\nimport * as contactController from \"./controllers/contact\";\n\n\n// API keys and Passport configuration\nimport * as passportConfig from \"./config/passport\";\n\n// Create Express server\nconst app = express();\n\n// Connect to MongoDB\nconst mongoUrl = process.env.MONGOLAB_URI;\n(<any>mongoose).Promise = bluebird;\nmongoose.connect(mongoUrl, {useMongoClient: true}).then(\n  () => { console.log(\"MongoDB connection successful. \"); },\n).catch(err => {\n  console.log(\"MongoDB connection error. Please make sure MongoDB is running. \" + err);\n  // process.exit();\n});\n\n// Express configuration\napp.set(\"port\", process.env.PORT || 3000);\n// app.set(\"views\", path.join(__dirname, \"../views\"));\n// app.set(\"view engine\", \"pug\");\napp.use(compression());\napp.use(logger(\"dev\"));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(expressValidator());\napp.use(session({\n  resave: true,\n  saveUninitialized: true,\n  secret: process.env.SESSION_SECRET,\n  store: new MongoStore({\n    url: mongoUrl,\n    autoReconnect: true\n  })\n}));\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(lusca.xframe(\"SAMEORIGIN\"));\napp.use(lusca.xssProtection(true));\napp.use((req, res, next) => {\n  res.locals.user = req.user;\n  next();\n});\napp.use((req, res, next) => {\n  // After successful login, redirect back to the intended page\n  if (!req.user &&\n    req.path !== \"/login\" &&\n    req.path !== \"/signup\" &&\n    !req.path.match(/^\\/auth/) &&\n    !req.path.match(/\\./)) {\n    req.session.returnTo = req.path;\n  } else if (req.user &&\n    req.path == \"/account\") {\n    req.session.returnTo = req.path;\n  }\n  next();\n});\napp.use(express.static(path.join(__dirname, \"public\"), { maxAge: 31557600000 }));\n\n/**\n * Primary app routes.\n */\napp.post(\"/login\", userController.login);\napp.get(\"/logout\", userController.logout);\napp.post(\"/forgot\", userController.forgot);\napp.get(\"/reset/:token\", userController.getReset);\napp.post(\"/reset/:token\", userController.postReset);\napp.post(\"/signup\", userController.signup);\napp.get(\"/account\", passportConfig.isAuthenticated, userController.account);\n\n// app.get(\"/contact\", contactController.getContact);\n// app.post(\"/contact\", contactController.postContact);\n\napp.post(\"/account/profile\", passportConfig.isAuthenticated, userController.postUpdateProfile);\napp.post(\"/account/password\", passportConfig.isAuthenticated, userController.postUpdatePassword);\napp.post(\"/account/delete\", passportConfig.isAuthenticated, userController.postDeleteAccount);\napp.get(\"/account/unlink/:provider\", passportConfig.isAuthenticated, userController.getOauthUnlink);\n\n// facebook login\napp.get(\"/api/facebook\", passportConfig.isAuthenticated, passportConfig.isAuthorized, apiController.getFacebook);\n\n/**\n * OAuth authentication routes. (Sign in)\n */\napp.get(\"/auth/facebook\", passport.authenticate(\"facebook\", { scope: [\"email\", \"public_profile\"] }));\napp.get(\"/auth/facebook/callback\", passport.authenticate(\"facebook\", { failureMessage: \"Something went terribly wrong\", failWithError: true }), (req, res) => {\n  res.status(200).send(\"success! Loged in with facebook.\");\n});\n\nmodule.exports = app;\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"9b3bd8a3f2464e39c1846c1b042dd433e2d0c086"}
,"/Users/hermes.espinola/Workspace/project/web/src/constants.ts": {"path":"/Users/hermes.espinola/Workspace/project/web/src/constants.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":88}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":59}}},"fnMap":{},"branchMap":{},"s":{"0":2,"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"constants.js","sourceRoot":"","sources":["constants.ts"],"names":[],"mappings":";;AAAa,QAAA,SAAS,GAAG,WAAW,CAAC;AACxB,QAAA,gBAAgB,GAAG,iBAAiB,CAAC;AACrC,QAAA,gBAAgB,GAAG,4DAA4D,CAAC;AAChF,QAAA,aAAa,GAAG,gBAAgB,CAAC;AACjC,QAAA,WAAW,GAAG,qCAAqC,CAAC;AACpD,QAAA,cAAc,GAAG,eAAe,CAAC;AACjC,QAAA,gBAAgB,GAAG,uBAAuB,CAAC;AAC3C,QAAA,YAAY,GAAG,uBAAuB,CAAC;AACvC,QAAA,iBAAiB,GAAG,8BAA8B,CAAC","sourcesContent":["export const NOT_FOUND = \"Not Found\";\nexport const MISSING_PASSWORD = \"Empty password.\";\nexport const INVALID_USERNAME = \"Invalid Username, please use only alphanumeric characters.\";\nexport const INVALID_EMAIL = \"Invalid email.\";\nexport const EMAIL_TAKEN = \"Username or email is already taken.\";\nexport const SIGNIN_SUCCESS = \"User created.\";\nexport const MISSING_USERNAME = \"No username or email.\";\nexport const SERVER_ERROR = \"Something went wrong.\";\nexport const WRONG_CREDENTIALS = \"Email or password incorrect.\";\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"8d62f304740b9fff44e9c7c0669d1446dee4e3ff"}
,"/Users/hermes.espinola/Workspace/project/web/src/config/passport.ts": {"path":"/Users/hermes.espinola/Workspace/project/web/src/config/passport.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":47}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":53}},"4":{"start":{"line":6,"column":10},"end":{"line":6,"column":27}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":40}},"6":{"start":{"line":9,"column":22},"end":{"line":9,"column":44}},"7":{"start":{"line":10,"column":25},"end":{"line":10,"column":50}},"8":{"start":{"line":11,"column":0},"end":{"line":13,"column":3}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":29}},"10":{"start":{"line":14,"column":0},"end":{"line":18,"column":3}},"11":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":24}},"13":{"start":{"line":22,"column":0},"end":{"line":40,"column":4}},"14":{"start":{"line":23,"column":4},"end":{"line":39,"column":7}},"15":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"16":{"start":{"line":25,"column":12},"end":{"line":25,"column":29}},"17":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"18":{"start":{"line":28,"column":12},"end":{"line":28,"column":85}},"19":{"start":{"line":30,"column":8},"end":{"line":38,"column":11}},"20":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"21":{"start":{"line":32,"column":16},"end":{"line":32,"column":33}},"22":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"23":{"start":{"line":35,"column":16},"end":{"line":35,"column":45}},"24":{"start":{"line":37,"column":12},"end":{"line":37,"column":85}},"25":{"start":{"line":58,"column":0},"end":{"line":121,"column":4}},"26":{"start":{"line":65,"column":4},"end":{"line":120,"column":5}},"27":{"start":{"line":66,"column":8},"end":{"line":88,"column":11}},"28":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"29":{"start":{"line":68,"column":16},"end":{"line":68,"column":33}},"30":{"start":{"line":70,"column":12},"end":{"line":87,"column":13}},"31":{"start":{"line":71,"column":16},"end":{"line":71,"column":26}},"32":{"start":{"line":74,"column":16},"end":{"line":86,"column":19}},"33":{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},"34":{"start":{"line":76,"column":24},"end":{"line":76,"column":41}},"35":{"start":{"line":78,"column":20},"end":{"line":78,"column":47}},"36":{"start":{"line":79,"column":20},"end":{"line":79,"column":72}},"37":{"start":{"line":80,"column":20},"end":{"line":80,"column":116}},"38":{"start":{"line":81,"column":20},"end":{"line":81,"column":86}},"39":{"start":{"line":82,"column":20},"end":{"line":82,"column":129}},"40":{"start":{"line":83,"column":20},"end":{"line":85,"column":23}},"41":{"start":{"line":84,"column":24},"end":{"line":84,"column":40}},"42":{"start":{"line":91,"column":8},"end":{"line":119,"column":11}},"43":{"start":{"line":92,"column":12},"end":{"line":94,"column":13}},"44":{"start":{"line":93,"column":16},"end":{"line":93,"column":33}},"45":{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},"46":{"start":{"line":96,"column":16},"end":{"line":96,"column":53}},"47":{"start":{"line":98,"column":12},"end":{"line":118,"column":15}},"48":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"49":{"start":{"line":100,"column":20},"end":{"line":100,"column":37}},"50":{"start":{"line":102,"column":16},"end":{"line":117,"column":17}},"51":{"start":{"line":103,"column":20},"end":{"line":103,"column":30}},"52":{"start":{"line":106,"column":33},"end":{"line":106,"column":53}},"53":{"start":{"line":107,"column":20},"end":{"line":107,"column":53}},"54":{"start":{"line":108,"column":20},"end":{"line":108,"column":47}},"55":{"start":{"line":109,"column":20},"end":{"line":109,"column":72}},"56":{"start":{"line":110,"column":20},"end":{"line":110,"column":95}},"57":{"start":{"line":111,"column":20},"end":{"line":111,"column":63}},"58":{"start":{"line":112,"column":20},"end":{"line":112,"column":105}},"59":{"start":{"line":113,"column":20},"end":{"line":113,"column":104}},"60":{"start":{"line":114,"column":20},"end":{"line":116,"column":23}},"61":{"start":{"line":115,"column":24},"end":{"line":115,"column":40}},"62":{"start":{"line":125,"column":0},"end":{"line":130,"column":2}},"63":{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},"64":{"start":{"line":127,"column":8},"end":{"line":127,"column":22}},"65":{"start":{"line":129,"column":4},"end":{"line":129,"column":48}},"66":{"start":{"line":134,"column":0},"end":{"line":142,"column":2}},"67":{"start":{"line":135,"column":21},"end":{"line":135,"column":53}},"68":{"start":{"line":136,"column":4},"end":{"line":141,"column":5}},"69":{"start":{"line":137,"column":8},"end":{"line":137,"column":15}},"70":{"start":{"line":140,"column":8},"end":{"line":140,"column":47}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":23},"end":{"line":11,"column":24}},"loc":{"start":{"line":11,"column":39},"end":{"line":13,"column":1}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":25},"end":{"line":14,"column":26}},"loc":{"start":{"line":14,"column":39},"end":{"line":18,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":32},"end":{"line":15,"column":33}},"loc":{"start":{"line":15,"column":47},"end":{"line":17,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":59},"end":{"line":22,"column":60}},"loc":{"start":{"line":22,"column":86},"end":{"line":40,"column":1}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":59},"end":{"line":23,"column":60}},"loc":{"start":{"line":23,"column":74},"end":{"line":39,"column":5}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":39},"end":{"line":30,"column":40}},"loc":{"start":{"line":30,"column":57},"end":{"line":38,"column":9}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":64,"column":3},"end":{"line":64,"column":4}},"loc":{"start":{"line":64,"column":54},"end":{"line":121,"column":1}},"line":64},"7":{"name":"(anonymous_7)","decl":{"start":{"line":66,"column":57},"end":{"line":66,"column":58}},"loc":{"start":{"line":66,"column":80},"end":{"line":88,"column":9}},"line":66},"8":{"name":"(anonymous_8)","decl":{"start":{"line":74,"column":53},"end":{"line":74,"column":54}},"loc":{"start":{"line":74,"column":68},"end":{"line":86,"column":17}},"line":74},"9":{"name":"(anonymous_9)","decl":{"start":{"line":83,"column":30},"end":{"line":83,"column":31}},"loc":{"start":{"line":83,"column":39},"end":{"line":85,"column":21}},"line":83},"10":{"name":"(anonymous_10)","decl":{"start":{"line":91,"column":57},"end":{"line":91,"column":58}},"loc":{"start":{"line":91,"column":80},"end":{"line":119,"column":9}},"line":91},"11":{"name":"(anonymous_11)","decl":{"start":{"line":98,"column":67},"end":{"line":98,"column":68}},"loc":{"start":{"line":98,"column":95},"end":{"line":118,"column":13}},"line":98},"12":{"name":"(anonymous_12)","decl":{"start":{"line":114,"column":30},"end":{"line":114,"column":31}},"loc":{"start":{"line":114,"column":39},"end":{"line":116,"column":21}},"line":114},"13":{"name":"(anonymous_13)","decl":{"start":{"line":125,"column":26},"end":{"line":125,"column":27}},"loc":{"start":{"line":125,"column":46},"end":{"line":130,"column":1}},"line":125},"14":{"name":"(anonymous_14)","decl":{"start":{"line":134,"column":23},"end":{"line":134,"column":24}},"loc":{"start":{"line":134,"column":43},"end":{"line":142,"column":1}},"line":134}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},{"start":{"line":24,"column":8},"end":{"line":26,"column":9}}],"line":24},"1":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27},"2":{"loc":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},{"start":{"line":31,"column":12},"end":{"line":33,"column":13}}],"line":31},"3":{"loc":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},{"start":{"line":34,"column":12},"end":{"line":36,"column":13}}],"line":34},"4":{"loc":{"start":{"line":65,"column":4},"end":{"line":120,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":120,"column":5}},{"start":{"line":65,"column":4},"end":{"line":120,"column":5}}],"line":65},"5":{"loc":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},{"start":{"line":67,"column":12},"end":{"line":69,"column":13}}],"line":67},"6":{"loc":{"start":{"line":70,"column":12},"end":{"line":87,"column":13}},"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":87,"column":13}},{"start":{"line":70,"column":12},"end":{"line":87,"column":13}}],"line":70},"7":{"loc":{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},"type":"if","locations":[{"start":{"line":75,"column":20},"end":{"line":77,"column":21}},{"start":{"line":75,"column":20},"end":{"line":77,"column":21}}],"line":75},"8":{"loc":{"start":{"line":80,"column":40},"end":{"line":80,"column":115}},"type":"binary-expr","locations":[{"start":{"line":80,"column":40},"end":{"line":80,"column":57}},{"start":{"line":80,"column":61},"end":{"line":80,"column":115}}],"line":80},"9":{"loc":{"start":{"line":81,"column":42},"end":{"line":81,"column":85}},"type":"binary-expr","locations":[{"start":{"line":81,"column":42},"end":{"line":81,"column":61}},{"start":{"line":81,"column":65},"end":{"line":81,"column":85}}],"line":81},"10":{"loc":{"start":{"line":82,"column":43},"end":{"line":82,"column":128}},"type":"binary-expr","locations":[{"start":{"line":82,"column":43},"end":{"line":82,"column":63}},{"start":{"line":82,"column":67},"end":{"line":82,"column":128}}],"line":82},"11":{"loc":{"start":{"line":92,"column":12},"end":{"line":94,"column":13}},"type":"if","locations":[{"start":{"line":92,"column":12},"end":{"line":94,"column":13}},{"start":{"line":92,"column":12},"end":{"line":94,"column":13}}],"line":92},"12":{"loc":{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},{"start":{"line":95,"column":12},"end":{"line":97,"column":13}}],"line":95},"13":{"loc":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"type":"if","locations":[{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},{"start":{"line":99,"column":16},"end":{"line":101,"column":17}}],"line":99},"14":{"loc":{"start":{"line":102,"column":16},"end":{"line":117,"column":17}},"type":"if","locations":[{"start":{"line":102,"column":16},"end":{"line":117,"column":17}},{"start":{"line":102,"column":16},"end":{"line":117,"column":17}}],"line":102},"15":{"loc":{"start":{"line":113,"column":44},"end":{"line":113,"column":103}},"type":"cond-expr","locations":[{"start":{"line":113,"column":71},"end":{"line":113,"column":98}},{"start":{"line":113,"column":101},"end":{"line":113,"column":103}}],"line":113},"16":{"loc":{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},{"start":{"line":126,"column":4},"end":{"line":128,"column":5}}],"line":126},"17":{"loc":{"start":{"line":136,"column":4},"end":{"line":141,"column":5}},"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":141,"column":5}},{"start":{"line":136,"column":4},"end":{"line":141,"column":5}}],"line":136}},"s":{"0":2,"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":0,"10":2,"11":0,"12":0,"13":2,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":2,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":2,"63":0,"64":0,"65":0,"66":2,"67":0,"68":0,"69":0,"70":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"inputSourceMap":{"version":3,"file":"passport.js","sourceRoot":"","sources":["passport.ts"],"names":[],"mappings":"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","sourcesContent":["import * as passport from \"passport\";\nimport * as request from \"request\";\nimport * as passportLocal from \"passport-local\";\nimport * as passportFacebook from \"passport-facebook\";\nimport * as _ from \"lodash\";\n\n// import { User, UserType } from '../models/User';\nimport { default as User } from \"../models/User\";\nimport { Request, Response, NextFunction } from \"express\";\n\nconst LocalStrategy = passportLocal.Strategy;\nconst FacebookStrategy = passportFacebook.Strategy;\n\npassport.serializeUser<any, any>((user, done) => {\n  done(undefined, user.id);\n});\n\npassport.deserializeUser((id, done) => {\n  User.findById(id, (err, user) => {\n    done(err, user);\n  });\n});\n\n\n/**\n * Sign in using Email and Password.\n */\npassport.use(new LocalStrategy({ usernameField: \"email\" }, (email, password, done) => {\n  User.findOne({ email: email.toLowerCase() }, (err, user: any) => {\n    if (err) { return done(err); }\n    if (!user) {\n      return done(undefined, false, { message: \"Invalid email or password.\" });\n    }\n    user.comparePassword(password, (err: Error, isMatch: boolean) => {\n      if (err) { return done(err); }\n      if (isMatch) {\n        return done(undefined, user);\n      }\n      return done(undefined, false, { message: \"Invalid email or password.\" });\n    });\n  });\n}));\n\n\n/**\n * OAuth Strategy Overview\n *\n * - User is already logged in.\n *   - Check if there is an existing account with a provider id.\n *     - If there is, return an error message. (Account merging not supported)\n *     - Else link new OAuth account with currently logged-in user.\n * - User is not logged in.\n *   - Check if it's a returning user.\n *     - If returning user, sign in and we are done.\n *     - Else check if there is an existing account with user's email.\n *       - If there is, return an error message.\n *       - Else create a new account.\n */\n\n\n/**\n * Sign in with Facebook.\n */\npassport.use(new FacebookStrategy({\n  clientID: process.env.FACEBOOK_ID,\n  clientSecret: process.env.FACEBOOK_SECRET,\n  callbackURL: \"/auth/facebook/callback\",\n  profileFields: [\"name\", \"email\", \"link\", \"locale\", \"timezone\"],\n  passReqToCallback: true\n}, (req: any, accessToken, refreshToken, profile, done) => {\n  if (req.user) {\n    User.findOne({ facebook: profile.id }, (err, existingUser) => {\n      if (err) { return done(err); }\n      if (existingUser) {\n        done(err);\n      } else {\n        User.findById(req.user.id, (err, user: any) => {\n          if (err) { return done(err); }\n          user.facebook = profile.id;\n          user.tokens.push({ kind: \"facebook\", accessToken });\n          user.profile.name = user.profile.name || `${profile.name.givenName} ${profile.name.familyName}`;\n          user.profile.gender = user.profile.gender || profile._json.gender;\n          user.profile.picture = user.profile.picture || `https://graph.facebook.com/${profile.id}/picture?type=large`;\n          user.save((err: Error) => {\n            done(err, user);\n          });\n        });\n      }\n    });\n  } else {\n    User.findOne({ facebook: profile.id }, (err, existingUser) => {\n      if (err) { return done(err); }\n      if (existingUser) {\n        return done(undefined, existingUser);\n      }\n      User.findOne({ email: profile._json.email }, (err, existingEmailUser) => {\n        if (err) { return done(err); }\n        if (existingEmailUser) {\n          done(err);\n        } else {\n          const user: any = new User();\n          user.email = profile._json.email;\n          user.facebook = profile.id;\n          user.tokens.push({ kind: \"facebook\", accessToken });\n          user.profile.name = `${profile.name.givenName} ${profile.name.familyName}`;\n          user.profile.gender = profile._json.gender;\n          user.profile.picture = `https://graph.facebook.com/${profile.id}/picture?type=large`;\n          user.profile.location = (profile._json.location) ? profile._json.location.name : \"\";\n          user.save((err: Error) => {\n            done(err, user);\n          });\n        }\n      });\n    });\n  }\n}));\n\n/**\n * Login Required middleware.\n */\nexport let isAuthenticated = (req: Request, res: Response, next: NextFunction) => {\n  if (req.isAuthenticated()) {\n    return next();\n  }\n  res.status(401).send(\"Not authenticateed.\");\n};\n\n/**\n * Authorization Required middleware.\n */\nexport let isAuthorized = (req: Request, res: Response, next: NextFunction) => {\n  const provider = req.path.split(\"/\").slice(-1)[0];\n\n  if (_.find(req.user.tokens, { kind: provider })) {\n    next();\n  } else {\n    res.status(403).send(\"No, you won't!\");\n  }\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"8cbf845231ced530effbd8030196bd216c5cce4d"}
,"/Users/hermes.espinola/Workspace/project/web/src/controllers/api.ts": {"path":"/Users/hermes.espinola/Workspace/project/web/src/controllers/api.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":32}},"2":{"start":{"line":8,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":9,"column":18},"end":{"line":9,"column":76}},"4":{"start":{"line":9,"column":50},"end":{"line":9,"column":75}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":44}},"6":{"start":{"line":11,"column":4},"end":{"line":19,"column":7}},"7":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"8":{"start":{"line":13,"column":12},"end":{"line":13,"column":29}},"9":{"start":{"line":15,"column":8},"end":{"line":18,"column":11}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":22},"end":{"line":8,"column":23}},"loc":{"start":{"line":8,"column":42},"end":{"line":20,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":39},"end":{"line":9,"column":40}},"loc":{"start":{"line":9,"column":50},"end":{"line":9,"column":75}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":108},"end":{"line":11,"column":109}},"loc":{"start":{"line":11,"column":126},"end":{"line":19,"column":5}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12}},"s":{"0":2,"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"api.js","sourceRoot":"","sources":["api.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAIb,iCAAiC;AAGjC;;;GAGG;AACQ,QAAA,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC3E,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;IAC9E,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACxC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,wEAAwE,EAAE,CAAC,GAAU,EAAE,OAA2B,EAAE,EAAE;QAClJ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAAC,CAAC;QAC9B,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE;YACzB,KAAK,EAAE,cAAc;YACrB,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["\"use strict\";\n\nimport * as async from \"async\";\nimport * as request from \"request\";\nimport * as graph from \"fbgraph\";\nimport { Response, Request, NextFunction } from \"express\";\n\n/**\n * GET /api/facebook\n * Facebook API example.\n */\nexport let getFacebook = (req: Request, res: Response, next: NextFunction) => {\n  const token = req.user.tokens.find((token: any) => token.kind === \"facebook\");\n  graph.setAccessToken(token.accessToken);\n  graph.get(`${req.user.facebook}?fields=id,name,email,first_name,last_name,gender,link,locale,timezone`, (err: Error, results: graph.FacebookUser) => {\n    if (err) { return next(err); }\n    res.render(\"api/facebook\", {\n      title: \"Facebook API\",\n      profile: results\n    });\n  });\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"ff5073fb6819acedaa4cc0adcc9a29a1f6500618"}
,"/Users/hermes.espinola/Workspace/project/web/src/controllers/user.ts": {"path":"/Users/hermes.espinola/Workspace/project/web/src/controllers/user.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":40}},"6":{"start":{"line":8,"column":16},"end":{"line":8,"column":44}},"7":{"start":{"line":13,"column":0},"end":{"line":35,"column":2}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":56}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":66}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":71}},"11":{"start":{"line":17,"column":19},"end":{"line":17,"column":41}},"12":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"13":{"start":{"line":19,"column":8},"end":{"line":19,"column":44}},"14":{"start":{"line":21,"column":4},"end":{"line":34,"column":23}},"15":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"16":{"start":{"line":23,"column":12},"end":{"line":23,"column":29}},"17":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"18":{"start":{"line":26,"column":12},"end":{"line":26,"column":54}},"19":{"start":{"line":28,"column":8},"end":{"line":33,"column":11}},"20":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"21":{"start":{"line":30,"column":16},"end":{"line":30,"column":33}},"22":{"start":{"line":32,"column":12},"end":{"line":32,"column":64}},"23":{"start":{"line":40,"column":0},"end":{"line":43,"column":2}},"24":{"start":{"line":41,"column":4},"end":{"line":41,"column":17}},"25":{"start":{"line":42,"column":4},"end":{"line":42,"column":40}},"26":{"start":{"line":48,"column":0},"end":{"line":80,"column":2}},"27":{"start":{"line":49,"column":4},"end":{"line":49,"column":56}},"28":{"start":{"line":50,"column":4},"end":{"line":50,"column":90}},"29":{"start":{"line":51,"column":4},"end":{"line":51,"column":86}},"30":{"start":{"line":52,"column":4},"end":{"line":52,"column":71}},"31":{"start":{"line":53,"column":19},"end":{"line":53,"column":41}},"32":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"33":{"start":{"line":55,"column":8},"end":{"line":55,"column":44}},"34":{"start":{"line":57,"column":17},"end":{"line":60,"column":6}},"35":{"start":{"line":61,"column":4},"end":{"line":79,"column":7}},"36":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"37":{"start":{"line":63,"column":12},"end":{"line":63,"column":29}},"38":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"39":{"start":{"line":66,"column":12},"end":{"line":66,"column":90}},"40":{"start":{"line":68,"column":8},"end":{"line":78,"column":11}},"41":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"42":{"start":{"line":70,"column":16},"end":{"line":70,"column":33}},"43":{"start":{"line":72,"column":12},"end":{"line":77,"column":15}},"44":{"start":{"line":73,"column":16},"end":{"line":75,"column":17}},"45":{"start":{"line":74,"column":20},"end":{"line":74,"column":37}},"46":{"start":{"line":76,"column":16},"end":{"line":76,"column":66}},"47":{"start":{"line":85,"column":0},"end":{"line":88,"column":2}},"48":{"start":{"line":86,"column":4},"end":{"line":86,"column":29}},"49":{"start":{"line":87,"column":4},"end":{"line":87,"column":35}},"50":{"start":{"line":93,"column":0},"end":{"line":122,"column":2}},"51":{"start":{"line":94,"column":4},"end":{"line":97,"column":5}},"52":{"start":{"line":95,"column":8},"end":{"line":95,"column":77}},"53":{"start":{"line":96,"column":8},"end":{"line":96,"column":75}},"54":{"start":{"line":98,"column":4},"end":{"line":98,"column":85}},"55":{"start":{"line":99,"column":19},"end":{"line":99,"column":41}},"56":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"57":{"start":{"line":101,"column":8},"end":{"line":101,"column":44}},"58":{"start":{"line":103,"column":4},"end":{"line":121,"column":7}},"59":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"60":{"start":{"line":105,"column":12},"end":{"line":105,"column":29}},"61":{"start":{"line":107,"column":8},"end":{"line":107,"column":50}},"62":{"start":{"line":108,"column":8},"end":{"line":108,"column":48}},"63":{"start":{"line":109,"column":8},"end":{"line":109,"column":52}},"64":{"start":{"line":110,"column":8},"end":{"line":110,"column":56}},"65":{"start":{"line":111,"column":8},"end":{"line":111,"column":54}},"66":{"start":{"line":112,"column":8},"end":{"line":120,"column":11}},"67":{"start":{"line":113,"column":12},"end":{"line":118,"column":13}},"68":{"start":{"line":114,"column":16},"end":{"line":116,"column":17}},"69":{"start":{"line":115,"column":20},"end":{"line":115,"column":125}},"70":{"start":{"line":117,"column":16},"end":{"line":117,"column":33}},"71":{"start":{"line":119,"column":12},"end":{"line":119,"column":74}},"72":{"start":{"line":127,"column":0},"end":{"line":146,"column":2}},"73":{"start":{"line":128,"column":4},"end":{"line":128,"column":90}},"74":{"start":{"line":129,"column":4},"end":{"line":129,"column":86}},"75":{"start":{"line":130,"column":19},"end":{"line":130,"column":41}},"76":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"77":{"start":{"line":132,"column":8},"end":{"line":132,"column":44}},"78":{"start":{"line":134,"column":4},"end":{"line":145,"column":7}},"79":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"80":{"start":{"line":136,"column":12},"end":{"line":136,"column":29}},"81":{"start":{"line":138,"column":8},"end":{"line":138,"column":42}},"82":{"start":{"line":139,"column":8},"end":{"line":144,"column":11}},"83":{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},"84":{"start":{"line":141,"column":16},"end":{"line":141,"column":33}},"85":{"start":{"line":143,"column":12},"end":{"line":143,"column":63}},"86":{"start":{"line":151,"column":0},"end":{"line":159,"column":2}},"87":{"start":{"line":152,"column":4},"end":{"line":158,"column":7}},"88":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"89":{"start":{"line":154,"column":12},"end":{"line":154,"column":29}},"90":{"start":{"line":156,"column":8},"end":{"line":156,"column":21}},"91":{"start":{"line":157,"column":8},"end":{"line":157,"column":63}},"92":{"start":{"line":164,"column":0},"end":{"line":179,"column":2}},"93":{"start":{"line":165,"column":21},"end":{"line":165,"column":40}},"94":{"start":{"line":166,"column":4},"end":{"line":178,"column":7}},"95":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"96":{"start":{"line":168,"column":12},"end":{"line":168,"column":29}},"97":{"start":{"line":170,"column":8},"end":{"line":170,"column":35}},"98":{"start":{"line":171,"column":8},"end":{"line":171,"column":77}},"99":{"start":{"line":171,"column":52},"end":{"line":171,"column":75}},"100":{"start":{"line":172,"column":8},"end":{"line":177,"column":11}},"101":{"start":{"line":173,"column":12},"end":{"line":175,"column":13}},"102":{"start":{"line":174,"column":16},"end":{"line":174,"column":33}},"103":{"start":{"line":176,"column":12},"end":{"line":176,"column":74}},"104":{"start":{"line":184,"column":0},"end":{"line":199,"column":2}},"105":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"106":{"start":{"line":186,"column":8},"end":{"line":186,"column":66}},"107":{"start":{"line":188,"column":4},"end":{"line":198,"column":7}},"108":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"109":{"start":{"line":192,"column":12},"end":{"line":192,"column":29}},"110":{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},"111":{"start":{"line":195,"column":12},"end":{"line":195,"column":91}},"112":{"start":{"line":197,"column":8},"end":{"line":197,"column":62}},"113":{"start":{"line":204,"column":0},"end":{"line":261,"column":2}},"114":{"start":{"line":205,"column":4},"end":{"line":205,"column":91}},"115":{"start":{"line":206,"column":4},"end":{"line":206,"column":85}},"116":{"start":{"line":207,"column":19},"end":{"line":207,"column":41}},"117":{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},"118":{"start":{"line":209,"column":8},"end":{"line":209,"column":44}},"119":{"start":{"line":211,"column":4},"end":{"line":260,"column":7}},"120":{"start":{"line":213,"column":12},"end":{"line":234,"column":15}},"121":{"start":{"line":217,"column":16},"end":{"line":219,"column":17}},"122":{"start":{"line":218,"column":20},"end":{"line":218,"column":37}},"123":{"start":{"line":220,"column":16},"end":{"line":222,"column":17}},"124":{"start":{"line":221,"column":20},"end":{"line":221,"column":99}},"125":{"start":{"line":223,"column":16},"end":{"line":223,"column":50}},"126":{"start":{"line":224,"column":16},"end":{"line":224,"column":52}},"127":{"start":{"line":225,"column":16},"end":{"line":225,"column":54}},"128":{"start":{"line":226,"column":16},"end":{"line":233,"column":19}},"129":{"start":{"line":227,"column":20},"end":{"line":229,"column":21}},"130":{"start":{"line":228,"column":24},"end":{"line":228,"column":41}},"131":{"start":{"line":230,"column":20},"end":{"line":232,"column":23}},"132":{"start":{"line":231,"column":24},"end":{"line":231,"column":40}},"133":{"start":{"line":237,"column":32},"end":{"line":243,"column":14}},"134":{"start":{"line":244,"column":32},"end":{"line":249,"column":13}},"135":{"start":{"line":250,"column":12},"end":{"line":253,"column":15}},"136":{"start":{"line":251,"column":16},"end":{"line":251,"column":81}},"137":{"start":{"line":252,"column":16},"end":{"line":252,"column":26}},"138":{"start":{"line":256,"column":8},"end":{"line":258,"column":9}},"139":{"start":{"line":257,"column":12},"end":{"line":257,"column":29}},"140":{"start":{"line":259,"column":8},"end":{"line":259,"column":62}},"141":{"start":{"line":266,"column":0},"end":{"line":324,"column":2}},"142":{"start":{"line":267,"column":4},"end":{"line":267,"column":73}},"143":{"start":{"line":268,"column":4},"end":{"line":268,"column":71}},"144":{"start":{"line":269,"column":19},"end":{"line":269,"column":41}},"145":{"start":{"line":270,"column":4},"end":{"line":272,"column":5}},"146":{"start":{"line":271,"column":8},"end":{"line":271,"column":44}},"147":{"start":{"line":273,"column":4},"end":{"line":323,"column":7}},"148":{"start":{"line":275,"column":12},"end":{"line":278,"column":15}},"149":{"start":{"line":276,"column":30},"end":{"line":276,"column":49}},"150":{"start":{"line":277,"column":16},"end":{"line":277,"column":33}},"151":{"start":{"line":281,"column":12},"end":{"line":293,"column":15}},"152":{"start":{"line":282,"column":16},"end":{"line":284,"column":17}},"153":{"start":{"line":283,"column":20},"end":{"line":283,"column":37}},"154":{"start":{"line":285,"column":16},"end":{"line":287,"column":17}},"155":{"start":{"line":286,"column":20},"end":{"line":286,"column":119}},"156":{"start":{"line":288,"column":16},"end":{"line":288,"column":48}},"157":{"start":{"line":289,"column":16},"end":{"line":289,"column":65}},"158":{"start":{"line":290,"column":16},"end":{"line":292,"column":19}},"159":{"start":{"line":291,"column":20},"end":{"line":291,"column":43}},"160":{"start":{"line":296,"column":12},"end":{"line":296,"column":31}},"161":{"start":{"line":297,"column":32},"end":{"line":303,"column":14}},"162":{"start":{"line":304,"column":32},"end":{"line":312,"column":13}},"163":{"start":{"line":313,"column":12},"end":{"line":316,"column":15}},"164":{"start":{"line":314,"column":16},"end":{"line":314,"column":108}},"165":{"start":{"line":315,"column":16},"end":{"line":315,"column":26}},"166":{"start":{"line":319,"column":8},"end":{"line":321,"column":9}},"167":{"start":{"line":320,"column":12},"end":{"line":320,"column":29}},"168":{"start":{"line":322,"column":8},"end":{"line":322,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":16},"end":{"line":13,"column":17}},"loc":{"start":{"line":13,"column":36},"end":{"line":35,"column":1}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":35},"end":{"line":21,"column":36}},"loc":{"start":{"line":21,"column":56},"end":{"line":34,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":24},"end":{"line":28,"column":25}},"loc":{"start":{"line":28,"column":33},"end":{"line":33,"column":9}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":17},"end":{"line":40,"column":18}},"loc":{"start":{"line":40,"column":31},"end":{"line":43,"column":1}},"line":40},"4":{"name":"(anonymous_4)","decl":{"start":{"line":48,"column":17},"end":{"line":48,"column":18}},"loc":{"start":{"line":48,"column":37},"end":{"line":80,"column":1}},"line":48},"5":{"name":"(anonymous_5)","decl":{"start":{"line":61,"column":54},"end":{"line":61,"column":55}},"loc":{"start":{"line":61,"column":77},"end":{"line":79,"column":5}},"line":61},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":18},"end":{"line":68,"column":19}},"loc":{"start":{"line":68,"column":27},"end":{"line":78,"column":9}},"line":68},"7":{"name":"(anonymous_7)","decl":{"start":{"line":72,"column":28},"end":{"line":72,"column":29}},"loc":{"start":{"line":72,"column":37},"end":{"line":77,"column":13}},"line":72},"8":{"name":"(anonymous_8)","decl":{"start":{"line":85,"column":18},"end":{"line":85,"column":19}},"loc":{"start":{"line":85,"column":32},"end":{"line":88,"column":1}},"line":85},"9":{"name":"(anonymous_9)","decl":{"start":{"line":93,"column":28},"end":{"line":93,"column":29}},"loc":{"start":{"line":93,"column":48},"end":{"line":122,"column":1}},"line":93},"10":{"name":"(anonymous_10)","decl":{"start":{"line":103,"column":41},"end":{"line":103,"column":42}},"loc":{"start":{"line":103,"column":56},"end":{"line":121,"column":5}},"line":103},"11":{"name":"(anonymous_11)","decl":{"start":{"line":112,"column":18},"end":{"line":112,"column":19}},"loc":{"start":{"line":112,"column":27},"end":{"line":120,"column":9}},"line":112},"12":{"name":"(anonymous_12)","decl":{"start":{"line":127,"column":29},"end":{"line":127,"column":30}},"loc":{"start":{"line":127,"column":49},"end":{"line":146,"column":1}},"line":127},"13":{"name":"(anonymous_13)","decl":{"start":{"line":134,"column":41},"end":{"line":134,"column":42}},"loc":{"start":{"line":134,"column":56},"end":{"line":145,"column":5}},"line":134},"14":{"name":"(anonymous_14)","decl":{"start":{"line":139,"column":18},"end":{"line":139,"column":19}},"loc":{"start":{"line":139,"column":27},"end":{"line":144,"column":9}},"line":139},"15":{"name":"(anonymous_15)","decl":{"start":{"line":151,"column":28},"end":{"line":151,"column":29}},"loc":{"start":{"line":151,"column":48},"end":{"line":159,"column":1}},"line":151},"16":{"name":"(anonymous_16)","decl":{"start":{"line":152,"column":48},"end":{"line":152,"column":49}},"loc":{"start":{"line":152,"column":57},"end":{"line":158,"column":5}},"line":152},"17":{"name":"(anonymous_17)","decl":{"start":{"line":164,"column":25},"end":{"line":164,"column":26}},"loc":{"start":{"line":164,"column":45},"end":{"line":179,"column":1}},"line":164},"18":{"name":"(anonymous_18)","decl":{"start":{"line":166,"column":41},"end":{"line":166,"column":42}},"loc":{"start":{"line":166,"column":56},"end":{"line":178,"column":5}},"line":166},"19":{"name":"(anonymous_19)","decl":{"start":{"line":171,"column":41},"end":{"line":171,"column":42}},"loc":{"start":{"line":171,"column":52},"end":{"line":171,"column":75}},"line":171},"20":{"name":"(anonymous_20)","decl":{"start":{"line":172,"column":18},"end":{"line":172,"column":19}},"loc":{"start":{"line":172,"column":27},"end":{"line":177,"column":9}},"line":172},"21":{"name":"(anonymous_21)","decl":{"start":{"line":184,"column":19},"end":{"line":184,"column":20}},"loc":{"start":{"line":184,"column":39},"end":{"line":199,"column":1}},"line":184},"22":{"name":"(anonymous_22)","decl":{"start":{"line":190,"column":14},"end":{"line":190,"column":15}},"loc":{"start":{"line":190,"column":29},"end":{"line":198,"column":5}},"line":190},"23":{"name":"(anonymous_23)","decl":{"start":{"line":204,"column":20},"end":{"line":204,"column":21}},"loc":{"start":{"line":204,"column":40},"end":{"line":261,"column":1}},"line":204},"24":{"name":"resetPassword","decl":{"start":{"line":212,"column":17},"end":{"line":212,"column":30}},"loc":{"start":{"line":212,"column":37},"end":{"line":235,"column":9}},"line":212},"25":{"name":"(anonymous_25)","decl":{"start":{"line":216,"column":22},"end":{"line":216,"column":23}},"loc":{"start":{"line":216,"column":37},"end":{"line":234,"column":13}},"line":216},"26":{"name":"(anonymous_26)","decl":{"start":{"line":226,"column":26},"end":{"line":226,"column":27}},"loc":{"start":{"line":226,"column":35},"end":{"line":233,"column":17}},"line":226},"27":{"name":"(anonymous_27)","decl":{"start":{"line":230,"column":36},"end":{"line":230,"column":37}},"loc":{"start":{"line":230,"column":45},"end":{"line":232,"column":21}},"line":230},"28":{"name":"sendResetPasswordEmail","decl":{"start":{"line":236,"column":17},"end":{"line":236,"column":39}},"loc":{"start":{"line":236,"column":52},"end":{"line":254,"column":9}},"line":236},"29":{"name":"(anonymous_29)","decl":{"start":{"line":250,"column":46},"end":{"line":250,"column":47}},"loc":{"start":{"line":250,"column":55},"end":{"line":253,"column":13}},"line":250},"30":{"name":"(anonymous_30)","decl":{"start":{"line":255,"column":7},"end":{"line":255,"column":8}},"loc":{"start":{"line":255,"column":16},"end":{"line":260,"column":5}},"line":255},"31":{"name":"(anonymous_31)","decl":{"start":{"line":266,"column":17},"end":{"line":266,"column":18}},"loc":{"start":{"line":266,"column":37},"end":{"line":324,"column":1}},"line":266},"32":{"name":"createRandomToken","decl":{"start":{"line":274,"column":17},"end":{"line":274,"column":34}},"loc":{"start":{"line":274,"column":41},"end":{"line":279,"column":9}},"line":274},"33":{"name":"(anonymous_33)","decl":{"start":{"line":275,"column":35},"end":{"line":275,"column":36}},"loc":{"start":{"line":275,"column":49},"end":{"line":278,"column":13}},"line":275},"34":{"name":"setRandomToken","decl":{"start":{"line":280,"column":17},"end":{"line":280,"column":31}},"loc":{"start":{"line":280,"column":45},"end":{"line":294,"column":9}},"line":280},"35":{"name":"(anonymous_35)","decl":{"start":{"line":281,"column":62},"end":{"line":281,"column":63}},"loc":{"start":{"line":281,"column":77},"end":{"line":293,"column":13}},"line":281},"36":{"name":"(anonymous_36)","decl":{"start":{"line":290,"column":26},"end":{"line":290,"column":27}},"loc":{"start":{"line":290,"column":35},"end":{"line":292,"column":17}},"line":290},"37":{"name":"sendForgotPasswordEmail","decl":{"start":{"line":295,"column":17},"end":{"line":295,"column":40}},"loc":{"start":{"line":295,"column":60},"end":{"line":317,"column":9}},"line":295},"38":{"name":"(anonymous_38)","decl":{"start":{"line":313,"column":46},"end":{"line":313,"column":47}},"loc":{"start":{"line":313,"column":55},"end":{"line":316,"column":13}},"line":313},"39":{"name":"(anonymous_39)","decl":{"start":{"line":318,"column":7},"end":{"line":318,"column":8}},"loc":{"start":{"line":318,"column":16},"end":{"line":323,"column":5}},"line":318}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{"line":18,"column":4},"end":{"line":20,"column":5}}],"line":18},"1":{"loc":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},{"start":{"line":22,"column":8},"end":{"line":24,"column":9}}],"line":22},"2":{"loc":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},{"start":{"line":25,"column":8},"end":{"line":27,"column":9}}],"line":25},"3":{"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"type":"if","locations":[{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},{"start":{"line":29,"column":12},"end":{"line":31,"column":13}}],"line":29},"4":{"loc":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},{"start":{"line":54,"column":4},"end":{"line":56,"column":5}}],"line":54},"5":{"loc":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},{"start":{"line":62,"column":8},"end":{"line":64,"column":9}}],"line":62},"6":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{"line":65,"column":8},"end":{"line":67,"column":9}}],"line":65},"7":{"loc":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},{"start":{"line":69,"column":12},"end":{"line":71,"column":13}}],"line":69},"8":{"loc":{"start":{"line":73,"column":16},"end":{"line":75,"column":17}},"type":"if","locations":[{"start":{"line":73,"column":16},"end":{"line":75,"column":17}},{"start":{"line":73,"column":16},"end":{"line":75,"column":17}}],"line":73},"9":{"loc":{"start":{"line":94,"column":4},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":97,"column":5}},{"start":{"line":94,"column":4},"end":{"line":97,"column":5}}],"line":94},"10":{"loc":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},{"start":{"line":100,"column":4},"end":{"line":102,"column":5}}],"line":100},"11":{"loc":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},{"start":{"line":104,"column":8},"end":{"line":106,"column":9}}],"line":104},"12":{"loc":{"start":{"line":107,"column":21},"end":{"line":107,"column":49}},"type":"binary-expr","locations":[{"start":{"line":107,"column":21},"end":{"line":107,"column":35}},{"start":{"line":107,"column":39},"end":{"line":107,"column":49}}],"line":107},"13":{"loc":{"start":{"line":108,"column":28},"end":{"line":108,"column":47}},"type":"binary-expr","locations":[{"start":{"line":108,"column":28},"end":{"line":108,"column":41}},{"start":{"line":108,"column":45},"end":{"line":108,"column":47}}],"line":108},"14":{"loc":{"start":{"line":109,"column":30},"end":{"line":109,"column":51}},"type":"binary-expr","locations":[{"start":{"line":109,"column":30},"end":{"line":109,"column":45}},{"start":{"line":109,"column":49},"end":{"line":109,"column":51}}],"line":109},"15":{"loc":{"start":{"line":110,"column":32},"end":{"line":110,"column":55}},"type":"binary-expr","locations":[{"start":{"line":110,"column":32},"end":{"line":110,"column":49}},{"start":{"line":110,"column":53},"end":{"line":110,"column":55}}],"line":110},"16":{"loc":{"start":{"line":111,"column":31},"end":{"line":111,"column":53}},"type":"binary-expr","locations":[{"start":{"line":111,"column":31},"end":{"line":111,"column":47}},{"start":{"line":111,"column":51},"end":{"line":111,"column":53}}],"line":111},"17":{"loc":{"start":{"line":113,"column":12},"end":{"line":118,"column":13}},"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":118,"column":13}},{"start":{"line":113,"column":12},"end":{"line":118,"column":13}}],"line":113},"18":{"loc":{"start":{"line":114,"column":16},"end":{"line":116,"column":17}},"type":"if","locations":[{"start":{"line":114,"column":16},"end":{"line":116,"column":17}},{"start":{"line":114,"column":16},"end":{"line":116,"column":17}}],"line":114},"19":{"loc":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},{"start":{"line":131,"column":4},"end":{"line":133,"column":5}}],"line":131},"20":{"loc":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},{"start":{"line":135,"column":8},"end":{"line":137,"column":9}}],"line":135},"21":{"loc":{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},{"start":{"line":140,"column":12},"end":{"line":142,"column":13}}],"line":140},"22":{"loc":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},{"start":{"line":153,"column":8},"end":{"line":155,"column":9}}],"line":153},"23":{"loc":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},{"start":{"line":167,"column":8},"end":{"line":169,"column":9}}],"line":167},"24":{"loc":{"start":{"line":173,"column":12},"end":{"line":175,"column":13}},"type":"if","locations":[{"start":{"line":173,"column":12},"end":{"line":175,"column":13}},{"start":{"line":173,"column":12},"end":{"line":175,"column":13}}],"line":173},"25":{"loc":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},{"start":{"line":185,"column":4},"end":{"line":187,"column":5}}],"line":185},"26":{"loc":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},{"start":{"line":191,"column":8},"end":{"line":193,"column":9}}],"line":191},"27":{"loc":{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},{"start":{"line":194,"column":8},"end":{"line":196,"column":9}}],"line":194},"28":{"loc":{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},{"start":{"line":208,"column":4},"end":{"line":210,"column":5}}],"line":208},"29":{"loc":{"start":{"line":217,"column":16},"end":{"line":219,"column":17}},"type":"if","locations":[{"start":{"line":217,"column":16},"end":{"line":219,"column":17}},{"start":{"line":217,"column":16},"end":{"line":219,"column":17}}],"line":217},"30":{"loc":{"start":{"line":220,"column":16},"end":{"line":222,"column":17}},"type":"if","locations":[{"start":{"line":220,"column":16},"end":{"line":222,"column":17}},{"start":{"line":220,"column":16},"end":{"line":222,"column":17}}],"line":220},"31":{"loc":{"start":{"line":227,"column":20},"end":{"line":229,"column":21}},"type":"if","locations":[{"start":{"line":227,"column":20},"end":{"line":229,"column":21}},{"start":{"line":227,"column":20},"end":{"line":229,"column":21}}],"line":227},"32":{"loc":{"start":{"line":256,"column":8},"end":{"line":258,"column":9}},"type":"if","locations":[{"start":{"line":256,"column":8},"end":{"line":258,"column":9}},{"start":{"line":256,"column":8},"end":{"line":258,"column":9}}],"line":256},"33":{"loc":{"start":{"line":270,"column":4},"end":{"line":272,"column":5}},"type":"if","locations":[{"start":{"line":270,"column":4},"end":{"line":272,"column":5}},{"start":{"line":270,"column":4},"end":{"line":272,"column":5}}],"line":270},"34":{"loc":{"start":{"line":282,"column":16},"end":{"line":284,"column":17}},"type":"if","locations":[{"start":{"line":282,"column":16},"end":{"line":284,"column":17}},{"start":{"line":282,"column":16},"end":{"line":284,"column":17}}],"line":282},"35":{"loc":{"start":{"line":285,"column":16},"end":{"line":287,"column":17}},"type":"if","locations":[{"start":{"line":285,"column":16},"end":{"line":287,"column":17}},{"start":{"line":285,"column":16},"end":{"line":287,"column":17}}],"line":285},"36":{"loc":{"start":{"line":319,"column":8},"end":{"line":321,"column":9}},"type":"if","locations":[{"start":{"line":319,"column":8},"end":{"line":321,"column":9}},{"start":{"line":319,"column":8},"end":{"line":321,"column":9}}],"line":319}},"s":{"0":2,"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":2,"24":0,"25":0,"26":2,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":2,"48":0,"49":0,"50":2,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":2,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":2,"87":0,"88":0,"89":0,"90":0,"91":0,"92":2,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":2,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":2,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":2,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"0":[1,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0]},"inputSourceMap":{"version":3,"file":"user.js","sourceRoot":"","sources":["user.ts"],"names":[],"mappings":"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","sourcesContent":["import * as async from \"async\";\nimport * as crypto from \"crypto\";\nimport * as nodemailer from \"nodemailer\";\nimport * as passport from \"passport\";\nimport { default as User, UserModel, AuthToken } from \"../models/User\";\nimport { Request, Response, NextFunction } from \"express\";\nimport { IVerifyOptions } from \"passport-local\";\nimport { WriteError } from \"mongodb\";\nconst request = require(\"express-validator\");\n\n/**\n * POST /login\n * Sign in using email and password.\n */\nexport let login = (req: Request, res: Response, next: NextFunction) => {\n  req.assert(\"email\", \"Email is not valid\").isEmail();\n  req.assert(\"password\", \"Password cannot be blank\").notEmpty();\n  req.sanitize(\"email\").normalizeEmail({ gmail_remove_dots: false });\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    return res.status(400).send(errors);\n  }\n\n  passport.authenticate(\"local\", (err: Error, user: UserModel, info: IVerifyOptions) => {\n    if (err) { return next(err); }\n    if (!user) {\n      return res.status(400).send(info.message);\n    }\n    req.logIn(user, (err) => {\n      if (err) { return next(err); }\n      res.status(200).send(\"Success! You are logged in.\");\n    });\n  })(req, res, next);\n};\n\n/**\n * GET /logout\n * Log out.\n */\nexport let logout = (req: Request, res: Response) => {\n  req.logout();\n  res.status(200).send(\"Logged out.\");\n};\n\n/**\n * POST /signup\n * Create a new local account.\n */\nexport let signup = (req: Request, res: Response, next: NextFunction) => {\n  req.assert(\"email\", \"Email is not valid\").isEmail();\n  req.assert(\"password\", \"Password must be at least 4 characters long\").len({ min: 4 });\n  req.assert(\"confirmPassword\", \"Passwords do not match\").equals(req.body.password);\n  req.sanitize(\"email\").normalizeEmail({ gmail_remove_dots: false });\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    return res.status(400).send(errors);\n  }\n\n  const user = new User({\n    email: req.body.email,\n    password: req.body.password\n  });\n\n  User.findOne({ email: req.body.email }, (err, existingUser) => {\n    if (err) { return next(err); }\n    if (existingUser) {\n      return res.status(400).send(\"Account with that email addres already exists.\");\n    }\n    user.save((err) => {\n      if (err) { return next(err); }\n      req.logIn(user, (err) => {\n        if (err) {\n          return next(err);\n        }\n        res.status(201).send(\"Success! User registered.\");\n      });\n    });\n  });\n};\n\n/**\n * GET /account\n * Profile page.\n */\nexport let account = (req: Request, res: Response) => {\n  delete req.user.password;\n  res.status(200).send(req.user);\n};\n\n/**\n * POST /account/profile\n * Update profile information.\n */\nexport let postUpdateProfile = (req: Request, res: Response, next: NextFunction) => {\n  if (req.body.email) {\n    req.assert(\"email\", \"Please enter a valid email address.\").isEmail();\n    req.sanitize(\"email\").normalizeEmail({ gmail_remove_dots: false });\n  }\n\n  req.assert(\"gender\", \"Please enter 'Male' or 'Female'\").isIn([\"Male\", \"Female\"]);\n  const errors = req.validationErrors();\n\n  if (errors) {\n    return res.status(400).send(errors);\n  }\n\n  User.findById(req.user.id, (err, user: UserModel) => {\n    if (err) { return next(err); }\n    user.email = req.body.email || user.email;\n    user.profile.name = req.body.name || \"\";\n    user.profile.gender = req.body.gender || \"\";\n    user.profile.location = req.body.location || \"\";\n    user.profile.website = req.body.website || \"\";\n    user.save((err: WriteError) => {\n      if (err) {\n        if (err.code === 11000) {\n          return res.status(400).send(\"The email address you have entered is already associated with an account.\");\n        }\n        return next(err);\n      }\n      res.status(200).send(\"Profile information has been updated.\");\n    });\n  });\n};\n\n/**\n * POST /account/password\n * Update current password.\n */\nexport let postUpdatePassword = (req: Request, res: Response, next: NextFunction) => {\n  req.assert(\"password\", \"Password must be at least 4 characters long\").len({ min: 4 });\n  req.assert(\"confirmPassword\", \"Passwords do not match\").equals(req.body.password);\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    return res.status(400).send(errors);\n  }\n\n  User.findById(req.user.id, (err, user: UserModel) => {\n    if (err) { return next(err); }\n    user.password = req.body.password;\n    user.save((err: WriteError) => {\n      if (err) { return next(err); }\n      res.status(200).send(\"Password has been changed.\");\n    });\n  });\n};\n\n/**\n * POST /account/delete\n * Delete user account.\n */\nexport let postDeleteAccount = (req: Request, res: Response, next: NextFunction) => {\n  User.remove({ _id: req.user.id }, (err) => {\n    if (err) { return next(err); }\n    req.logout();\n    res.status(200).send(\"Your account has been deleted.\");\n  });\n};\n\n/**\n * GET /account/unlink/:provider\n * Unlink OAuth provider.\n */\nexport let getOauthUnlink = (req: Request, res: Response, next: NextFunction) => {\n  const provider = req.params.provider;\n  User.findById(req.user.id, (err, user: any) => {\n    if (err) { return next(err); }\n    user[provider] = undefined;\n    user.tokens = user.tokens.filter((token: AuthToken) => token.kind !== provider);\n    user.save((err: WriteError) => {\n      if (err) { return next(err); }\n      res.status(200).send(`${provider} account has been unlinked`);\n    });\n  });\n};\n\n/**\n * GET /reset/:token\n * Verify reset token\n */\nexport let getReset = (req: Request, res: Response, next: NextFunction) => {\n  if (req.isAuthenticated()) {\n    return res.status(401).send(\"You are already logged in.\");\n  }\n  User.findOne({ passwordResetToken: req.params.token })\n    .where(\"passwordResetExpires\").gt(Date.now())\n    .exec((err, user) => {\n      if (err) { return next(err); }\n      if (!user) {\n        return res.status(403).send(\"Password reset token is invalid or has expired.\");\n      }\n\n      res.status(200).send(\"Password reset token is valid\");\n    });\n};\n\n/**\n * POST /reset/:token\n * Process the reset password request.\n */\nexport let postReset = (req: Request, res: Response, next: NextFunction) => {\n  req.assert(\"password\", \"Password must be at least 4 characters long.\").len({ min: 4 });\n  req.assert(\"confirmPassword\", \"Passwords must match.\").equals(req.body.password);\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    return res.status(400).send(errors);\n  }\n\n  async.waterfall([\n    function resetPassword(done: Function) {\n      User\n        .findOne({ passwordResetToken: req.params.token })\n        .where(\"passwordResetExpires\").gt(Date.now())\n        .exec((err, user: any) => {\n          if (err) { return next(err); }\n          if (!user) {\n            return res.status(403).send(\"Password reset token is invalid or has expired.\");\n          }\n          user.password = req.body.password;\n          user.passwordResetToken = undefined;\n          user.passwordResetExpires = undefined;\n          user.save((err: WriteError) => {\n            if (err) { return next(err); }\n            req.logIn(user, (err) => {\n              done(err, user);\n            });\n          });\n        });\n    },\n    function sendResetPasswordEmail(user: UserModel, done: Function) {\n      const transporter = nodemailer.createTransport({\n        service: \"SendGrid\",\n        auth: {\n          user: process.env.SENDGRID_USER,\n          pass: process.env.SENDGRID_PASSWORD\n        }\n      });\n      const mailOptions = {\n        to: user.email,\n        from: \"service@cooper.com\",\n        subject: \"Your password has been changed\",\n        text: `Hello,\\n\\nThis is a confirmation that the password for your account ${user.email} has just been changed.\\n`\n      };\n      transporter.sendMail(mailOptions, (err) => {\n        res.status(200).send(\"Success! Your password has been changed.\");\n        done(err);\n      });\n    }\n  ], (err) => {\n    if (err) { return next(err); }\n    res.status(500).send(\"Something went terribly wrong\");\n  });\n};\n\n/**\n * POST /forgot\n * Create a random token, then the send user an email with a reset link.\n */\nexport let forgot = (req: Request, res: Response, next: NextFunction) => {\n  req.assert(\"email\", \"Please enter a valid email address.\").isEmail();\n  req.sanitize(\"email\").normalizeEmail({ gmail_remove_dots: false });\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    return res.status(400).send(errors);\n  }\n\n  async.waterfall([\n    function createRandomToken(done: Function) {\n      crypto.randomBytes(16, (err, buf) => {\n        const token = buf.toString(\"hex\");\n        done(err, token);\n      });\n    },\n    function setRandomToken(token: AuthToken, done: Function) {\n      User.findOne({ email: req.body.email }, (err, user: any) => {\n        if (err) { return done(err); }\n        if (!user) {\n          return res.status(200).send(`An e-mail has been sent to ${user.email} with further instructions.`);\n        }\n        user.passwordResetToken = token;\n        user.passwordResetExpires = Date.now() + 3600000; // 1 hour\n        user.save((err: WriteError) => {\n          done(err, token, user);\n        });\n      });\n    },\n    function sendForgotPasswordEmail(token: AuthToken, user: UserModel, done: Function) {\n      console.log(token);\n      const transporter = nodemailer.createTransport({\n        service: \"SendGrid\",\n        auth: {\n          user: process.env.SENDGRID_USER,\n          pass: process.env.SENDGRID_PASSWORD\n        }\n      });\n      const mailOptions = {\n        to: user.email,\n        from: \"service@cooper.com\",\n        subject: \"Reset your password on Cooper\",\n        text: `You are receiving this email because you (or someone else) have requested the reset of the password for your account.\\n\\n\n          Please click on the following link, or paste this into your browser to complete the process:\\n\\n\n          http://${req.headers.host}/reset/${token}\\n\\n\n          If you did not request this, please ignore this email and your password will remain unchanged.\\n`\n      };\n      transporter.sendMail(mailOptions, (err) => {\n        res.status(200).send(`An e-mail has been sent to ${user.email} with further instructions.`);\n        done(err);\n      });\n    }\n  ], (err) => {\n    if (err) { return next(err); }\n    res.status(500).send(\"Something went terribly wrong\");\n  });\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"30afbdc2d641cf8333b3ae41193aa5a721a6949d"}
,"/Users/hermes.espinola/Workspace/project/web/src/models/User.ts": {"path":"/Users/hermes.espinola/Workspace/project/web/src/models/User.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":24},"end":{"line":6,"column":60}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":43}},"6":{"start":{"line":8,"column":19},"end":{"line":34,"column":24}},"7":{"start":{"line":35,"column":0},"end":{"line":35,"column":73}},"8":{"start":{"line":39,"column":0},"end":{"line":56,"column":3}},"9":{"start":{"line":40,"column":17},"end":{"line":40,"column":21}},"10":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"11":{"start":{"line":42,"column":8},"end":{"line":42,"column":22}},"12":{"start":{"line":44,"column":4},"end":{"line":55,"column":7}},"13":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"14":{"start":{"line":46,"column":12},"end":{"line":46,"column":29}},"15":{"start":{"line":48,"column":8},"end":{"line":54,"column":11}},"16":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"17":{"start":{"line":50,"column":16},"end":{"line":50,"column":33}},"18":{"start":{"line":52,"column":12},"end":{"line":52,"column":33}},"19":{"start":{"line":53,"column":12},"end":{"line":53,"column":19}},"20":{"start":{"line":57,"column":0},"end":{"line":61,"column":2}},"21":{"start":{"line":58,"column":4},"end":{"line":60,"column":7}},"22":{"start":{"line":59,"column":8},"end":{"line":59,"column":25}},"23":{"start":{"line":65,"column":0},"end":{"line":74,"column":2}},"24":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"25":{"start":{"line":67,"column":8},"end":{"line":67,"column":19}},"26":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"27":{"start":{"line":70,"column":8},"end":{"line":70,"column":64}},"28":{"start":{"line":72,"column":16},"end":{"line":72,"column":73}},"29":{"start":{"line":73,"column":4},"end":{"line":73,"column":66}},"30":{"start":{"line":76,"column":13},"end":{"line":76,"column":47}},"31":{"start":{"line":77,"column":0},"end":{"line":77,"column":23}}},"fnMap":{"0":{"name":"hashPassword","decl":{"start":{"line":39,"column":32},"end":{"line":39,"column":44}},"loc":{"start":{"line":39,"column":51},"end":{"line":56,"column":1}},"line":39},"1":{"name":"(anonymous_1)","decl":{"start":{"line":44,"column":23},"end":{"line":44,"column":24}},"loc":{"start":{"line":44,"column":38},"end":{"line":55,"column":5}},"line":44},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":52},"end":{"line":48,"column":53}},"loc":{"start":{"line":48,"column":67},"end":{"line":54,"column":9}},"line":48},"3":{"name":"(anonymous_3)","decl":{"start":{"line":57,"column":37},"end":{"line":57,"column":38}},"loc":{"start":{"line":57,"column":70},"end":{"line":61,"column":1}},"line":57},"4":{"name":"(anonymous_4)","decl":{"start":{"line":58,"column":53},"end":{"line":58,"column":54}},"loc":{"start":{"line":58,"column":71},"end":{"line":60,"column":5}},"line":58},"5":{"name":"(anonymous_5)","decl":{"start":{"line":65,"column":30},"end":{"line":65,"column":31}},"loc":{"start":{"line":65,"column":40},"end":{"line":74,"column":1}},"line":65}},"branchMap":{"0":{"loc":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},{"start":{"line":41,"column":4},"end":{"line":43,"column":5}}],"line":41},"1":{"loc":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},{"start":{"line":45,"column":8},"end":{"line":47,"column":9}}],"line":45},"2":{"loc":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},{"start":{"line":49,"column":12},"end":{"line":51,"column":13}}],"line":49},"3":{"loc":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},{"start":{"line":66,"column":4},"end":{"line":68,"column":5}}],"line":66},"4":{"loc":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},{"start":{"line":69,"column":4},"end":{"line":71,"column":5}}],"line":69}},"s":{"0":2,"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":2,"21":0,"22":0,"23":2,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":2,"31":2},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"User.js","sourceRoot":"","sources":["User.ts"],"names":[],"mappings":";;AAAA,wCAAwC;AACxC,iCAAiC;AACjC,qCAAqC;AACrC,6DAA6D;AAC7D,4CAA0D;AA6B1D,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;IACrC,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,IAAI;QACf,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE,CAAC,IAAI,EAAE,gBAAgB,CAAC;QAClC,KAAK,EAAE,CAAC,cAAc,EAAE,yBAAa,CAAC;QACtC,KAAK,EAAE,IAAI;KACX;IACF,QAAQ,EAAE,MAAM;IAChB,kBAAkB,EAAE,MAAM;IAC1B,oBAAoB,EAAE,IAAI;IAE1B,QAAQ,EAAE,MAAM;IAChB,OAAO,EAAE,MAAM;IACf,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,KAAK;IAEb,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE;YACN,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;SACzB;QACD,QAAQ,EAAE,MAAM;QAChB,OAAO,EAAE,MAAM;QACf,OAAO,EAAE,MAAM;KAChB;CACF,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,UAAU,CAAC,MAAM,CAAC,eAAe,EAAE,EAAC,OAAO,EAAE,uBAAW,EAAC,CAAC,CAAC;AAE3D;;GAEG;AACH,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,sBAAsB,IAAkB;IAC7D,MAAM,IAAI,GAAG,IAAI,CAAC;IAClB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAAC,CAAC;IACpD,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QAC/B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAAC,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,GAAmB,EAAE,IAAI,EAAE,EAAE;YACxE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,OAAO,CAAC,eAAe,GAAG,UAAU,iBAAyB,EAAE,EAAkC;IAC1G,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAmB,EAAE,OAAgB,EAAE,EAAE;QACzF,EAAE,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAGF;;GAEG;AACH,UAAU,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAY,EAAE,EAAE;IAC7C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACV,IAAI,GAAG,GAAG,CAAC;IACb,CAAC;IACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAChB,MAAM,CAAC,kCAAkC,IAAI,UAAU,CAAC;IAC1D,CAAC;IACD,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACtE,MAAM,CAAC,+BAA+B,GAAG,MAAM,IAAI,UAAU,CAAC;AAChE,CAAC,CAAC;AAEF,8EAA8E;AAC9E,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAChD,kBAAe,IAAI,CAAC","sourcesContent":["import * as bcrypt from \"bcrypt-nodejs\";\nimport * as crypto from \"crypto\";\nimport * as mongoose from \"mongoose\";\nimport * as uniqueValidator from \"mongoose-unique-validator\";\nimport { EMAIL_TAKEN, INVALID_EMAIL } from \"../constants\";\nimport { NextFunction } from \"express\";\n\nexport type UserModel = mongoose.Document & {\n  email: string,\n  password: string,\n  passwordResetToken: string,\n  passwordResetExpires: Date,\n\n  facebook: string,\n  tokens: AuthToken[],\n\n  profile: {\n    name: string,\n    gender: string,\n    location: string,\n    website: string,\n    picture: string\n  },\n\n  comparePassword: (candidatePassword: string, cb: (err: any, isMatch: any) => {}) => void,\n  gravatar: (size: number) => string\n};\n\nexport type AuthToken = {\n  accessToken: string,\n  kind: string\n};\n\nconst userSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    lowercase: true,\n    unique: true,\n    required: [true, \"can't be blank\"],\n    match: [/\\S+@\\S+\\.\\S+/, INVALID_EMAIL],\n    index: true\n   },\n  password: String,\n  passwordResetToken: String,\n  passwordResetExpires: Date,\n\n  facebook: String,\n  twitter: String,\n  google: String,\n  tokens: Array,\n\n  profile: {\n    name: String,\n    gender: {\n      type: String,\n      enum: [\"Male\", \"Female\"]\n    },\n    location: String,\n    website: String,\n    picture: String\n  }\n}, { timestamps: true });\n\nuserSchema.plugin(uniqueValidator, {message: EMAIL_TAKEN});\n\n/**\n * Password hash middleware.\n */\nuserSchema.pre(\"save\", function hashPassword(next: NextFunction) {\n  const user = this;\n  if (!user.isModified(\"password\")) { return next(); }\n  bcrypt.genSalt(10, (err, salt) => {\n    if (err) { return next(err); }\n    bcrypt.hash(user.password, salt, undefined, (err: mongoose.Error, hash) => {\n      if (err) { return next(err); }\n      user.password = hash;\n      next();\n    });\n  });\n});\n\nuserSchema.methods.comparePassword = function (candidatePassword: string, cb: (err: any, isMatch: any) => {}) {\n  bcrypt.compare(candidatePassword, this.password, (err: mongoose.Error, isMatch: boolean) => {\n    cb(err, isMatch);\n  });\n};\n\n\n/**\n * Helper method for getting user's gravatar.\n */\nuserSchema.methods.gravatar = (size: number) => {\n  if (!size) {\n    size = 200;\n  }\n  if (!this.email) {\n    return `https://gravatar.com/avatar/?s=${size}&d=retro`;\n  }\n  const md5 = crypto.createHash(\"md5\").update(this.email).digest(\"hex\");\n  return `https://gravatar.com/avatar/${md5}?s=${size}&d=retro`;\n};\n\n// export const User: UserType = mongoose.model<UserType>('User', userSchema);\nconst User = mongoose.model(\"User\", userSchema);\nexport default User;\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"c5ada409f6a69737cebc66641704f02f0da9a24f"}
}
